# This file is a template, and might need editing before it works on your project.
# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
image: gradle:alpine

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script: gradle -Dspring.profiles.active=prod --build-cache build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
test:
  stage: test
  script: gradle check
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  only:
    refs:
      - /^feature[0-9]+$/ # https://regex101.com/r/SMeXVe/1
deploy:
  image: alpine
  stage: deploy
  before_script:
    # Get ssh keys from target server and add them to known_hosts
    - apk update
    - 'which ssh-agent || ( apk add openssh-client )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p 22 -4 $PRODUCTION_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Add the private key defined in PRIVATE_KEY variable
    - ssh-keygen -f ~/.ssh/id_rsa -t rsa -N ''
    - $PRIVATE_KEY=$(cat ~/.ssh/id_rsa)
    - echo "$PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  script:
    - echo "Deploying the system"
    - ssh -o StrictHostKeyChecking=no toubi@$PRODUCTION_HOST -p 22 -4 "mkdir -p /opt/tomcat/webapps"
    - scp -o StrictHostKeyChecking=no build/libs/deploy-*.war $PRODUCTION_HOST:/opt/tomcat/webapps/deploy.war
    - scp -o StrictHostKeyChecking=no docker/docker-compose-prod.yml $PRODUCTION_HOST:/opt/tomcat/
    - ssh -o StrictHostKeyChecking=no root@$PRODUCTION_HOST -p 22 -4 "docker-compose -f /opt/tomcat/docker-compose-prod.yml up -d --force-recreate"
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  environment: production
  only:
    - master
